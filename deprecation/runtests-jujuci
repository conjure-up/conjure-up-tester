#!/bin/bash

set -x
export USER=jenkins
export PATH=/snap/bin:$HOME/juju-ci-tools:$PATH
export JUJU_REPOSITORY=$HOME/repository
export JUJU_HOME=$HOME/cloud-city
source $JUJU_HOME/ec2rc
source $JUJU_HOME/juju-qa.jujuci

startInstance() {
    AMI_IMAGE=$(get_ami.py --virt hvm  xenial amd64)
    INSTANCE_TYPE="c5.4xlarge"
    # we want a big root disk, use unique number in case we have to cleanup later
    instanceid=$(AMI_IMAGE=$AMI_IMAGE INSTANCE_TYPE=$INSTANCE_TYPE ec2-run-instance-get-id --block-device-mapping /dev/sda1=:100)

    # tag job
    for attempt in $(seq 5); do
        if ec2-tag-job-instances $instanceid; then
            break
        elif [ "$attempt" == "5" ]; then
            exit 1
        fi
        sleep 30
    done
    NODE=$(ec2-get-name $instanceid)
    wait-for-port $NODE 22
}

stopInstance() {
    ec2-terminate-job-instances
}

# annotate each output line with timestamp
annotate() {
    set -o pipefail
    eval "$*" 2>&1 | awk '{ print strftime("%Y-%m-%d %H:%M:%S"), $0; fflush(); }'
}

# store command in heredoc to avoid weird ssh buffering issues
# https://serverfault.com/questions/315150/no-tty-present-when-running-commands-over-ssh-in-here-document
ssh_main="$(cat <<'EOF'
    set -x

    sudo snap install lxd
    id  # verify lxd group
    /snap/bin/lxd init --auto
    /snap/bin/lxc network create lxdbr0 ipv4.nat=true ipv4.address=auto ipv6.address=none ipv6.nat=false

    set -e
    sudo snap install conjure-up --classic --edge

    spells=(canonical-kubernetes \
            hadoop-processing \
            spark-processing \
            hadoop-spark
            # skip novalxd tests until we can fix setting lxd defaults for headless
            # openstack-novalxd
           )

    for spell in "${spells[@]}"; do
        /snap/bin/conjure-up --debug --notrack --noreport --color=never $spell localhost test-controller test-model
        /snap/bin/juju destroy-model -y test-model
    done
EOF
)"

main() {
    set -x
    startInstance
    ssh -tt -o "StrictHostKeyChecking no" -o "ServerAliveInterval 60" -o "ServerAliveCountMax 110" ubuntu@$NODE "$ssh_main"
    ret=$?
    scp -r -o "StrictHostKeyChecking no" ubuntu@$NODE:.cache/conjure-up $WORKSPACE/cache-conjure-up
    stopInstance
    exit $ret
}
annotate main
